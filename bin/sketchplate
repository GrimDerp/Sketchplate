#!/usr/bin/env node

/*global __dirname, process*/
/**
 usage:
	$	sketchplate --new ~/Sites/myProject --gitinit
	creates a new project, initializes it as a repo
	$	sketchplate --update
	retrieves new copies of all libraries and copies them into template
*/

var program = require('commander'),
	settings = require('../settings.json'),
	template = require('../templates/'+ settings.template + '.json'),
	sketchplate = require('../lib/sketchplate'),
	settings;


program
	.version('0.0.2')
	.option('-n, --new [location]', 'New project at [location]','')
	.option('-g, --gitinit', 'Initialize repo after creation')
	.option('-f, --fetch', 'Fetch new copies of all libraries')
	.option('-o, --open [location]', 'Open [location] in editor', '')
	.option('-t, --template [template]', 'Create with [template] template', '')
	.option('-s, --skipopen', 'Skip opening project in editor')
	.parse(process.argv);


if( program.template !== '' ){
	settings.template = program.template;
}

settings.templateDirectory = settings.templateDirectory || __dirname + '/../templates/'+settings.template+'/';


if ( program.fetch ){
	sketchplate.fetchAllLibsFor( settings );
}

if( program['new'] !== undefined  && program['new'] !== ''){
	if( program['template'] !== undefined && program['template'] !== ''){
		console.log('set template: '+ program['template'] );
		settings.template = program['template'];
	}
	//create a sketchplate project
	var plate = sketchplate.create( settings );
	plate.copyTemplate( program['new'], function (err, project){
		if( err )throw Error(err);
		if ( program.gitinit ) project.initRepo();
		if ( !program.skipopen ){
			project.openInEditor(function (){
				//process.exit(0);
			});
		}
	});
}

if( program.open && program.open.length > 0 ){
	sketchplate.openProject(program.open, settings).openInEditor();
}

